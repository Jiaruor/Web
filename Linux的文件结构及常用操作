一、Linus文件系统结构
1．名言:
（1）Linux----->一切皆文件
（2）Python------->人生苦短,我用python
2．文件结构;
（1）Windows:分盘,C盘,D盘
①如:插入U盘多一个盘符
（2）Linux:
①逻辑关系:线性结构(1:1如1=1).树形逻辑(1:n--->如:亲属关系,重理解),图形逻辑(n:m--->如运动会报名一个项目有多个人报名,一个人报多个项目)
②Linux采用了树形结构(挂载  mount)
1）意义:只是为了查找的方便
2）第一个级别:根目录(/)
3．Shell 操作命令
（1）Cd change direcotry ---->  改变目录.跟一个具有目录属性的文件名
（2）PWD : 打印当前路径信息
（3）Ls : 列出当前目录下的文件信息 (文件名)
#ls 目标文件名 : 查看目标目录下的文件信息
	[参数]
		-a : 查看所有的文件信息,
（4）$ : 得到变量里的值
（5）Which 命令 :查看文件------>能不能查看自己---->可以自查
（6）#! : 后面的字符怎么解释它
（7）Chmod : change modle 修改文件权限
（8）哪些具有目录属性的符号:
①根目录属性操作有关的命令: cd
②当前用户的家目录: ~		---->类似Windows下的我的文档,工作中操作的所有文件都在自己的家目录下完成   --->cd 不跟参数,默认直接回家
# command not found :第一个单词错误---->第一个单词是命令,或者PATH路径下没有这个名字
# Not such file or directory :后面目标有问题
#^C   Ctrl+c   未执行
#没有权限 : 通过chmod 修改权限
# 通用模型: 命令 [参数/选项] 目标文件名
（9）Shell的提示符:[root@web /]
1）#root : 当前用户名
2）@ 分隔符
3）Web : 主机名
4）/ : 当前的路径信息
4．隐藏:
（1）只要以.开头的文件名,就称之为隐藏文件.	(同Windows)
（2）一般情况下,隐藏文件都是配置文件.----->配置文件:让程序员写的程序,可以在不同环境下运行---->用户操作,可修改.
①  .  目录属性的名字	当前路径	./abc------>从当前路径下找abc文件当做命令执行.当做一个可执行文件.------>.可以省略
②  ..  目录属性的名字	上级目录	../abc :上级目录的abc文件
（3）相对路径和绝对路径
①只要字符串不是从/发起的,就叫相对路径
②绝对路径的优缺点:无论在哪路执行,都可以,但是字符很多
③绝对路径的优缺点:简单,但是必须跟当前的运行环境有关
④环境:
1）作为命令,Linux提供一个环境变量的值来帮助系统查找可执行文件
2）Linux下在哪里保存:在path变量里保存
3）在linux下去看一个变量的值:	echo $path
5．Linux的目录FHS标准	 文件系统层次结构标准
6．编辑abc.txt文件,并在任何位置运行
（1）在文件的开头#!/usr/bin/python------->限制解释器
（2）Chmod +x abc.txt		#增加一个可执行的权限
（3）查看path 变量 : echo $PATH--------->复制文件到环境变量
①Cp /root/abc.txt /usr/local/sbin/
②可以在任何位置执行abc.txt
③Path : 减少找到命令的字符个数
二、权限
1．查看权限----->  ls -l : 显示当前目录文件的详细信息----->可以用ll
（1）第一列 : 文件类型(使用方式的抽象) 文件权限
①定义了七种文件的操作方式(底层的操作方式)(可以改吗------>     )
1）普通文件:	-	看得见的,99%都是普通文件
2）目录文件:	d	
3）字符设备文件:	c	character	/dev
4）块设备文件:		b	block
5）快捷方式文件:	l	link	和Windows的意义是一样的,物理层次不同
6）Socket文件:	s
7）Fifo文件:		p进程间通信
②文件权限
1）r: 可读
2）W:可写
3）X:可执行
4）-:	无效状态
③有3组权限,每组有3种状态:
1）每组的状态(r/-)(w/-)(x/-)
2）三组
a．第一组:当前用户(u)--------->ls -l 详细查看的第三列
b．第二组:当前用户的组(g)--------->ls -l 详细查看的第四列
c．第三组:其他用户(o)
④修改权限
1）Chmod 
a．’+’’-’参数		ugo
b．八进制进行权限映射	7-111-rwx
⑤ Sudo 普通文件提升sudo权力
⑥切换回root------->  su -
三、Shell
1．通配符:----->*	?	[...]	[-]		[^]------>方括号只代表一个
2．特殊符号:>	>>	<	|
四、/  /root  root用户的家目录的区别
